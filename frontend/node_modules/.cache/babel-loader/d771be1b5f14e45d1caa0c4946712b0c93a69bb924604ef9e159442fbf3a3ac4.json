{"ast":null,"code":"import axios from '../api';\n\n//POST\n\nconst GetAll = async () => {\n  const ins = 2,\n    account = -1,\n    password = -1,\n    wheretosit = 0,\n    seatID = -1; //\n  const {\n    data: {\n      message,\n      whr,\n      pos\n    }\n  } = await axios.post('/infor', {\n    account,\n    password,\n    wheretosit,\n    //\n    seatID,\n    //\n    ins\n  });\n  return whr; // whr => all people's infor\n};\n_c = GetAll;\nconst QryEmpty = async (wheretosit, seatID) => {\n  console.log(wheretosit, seatID);\n  const ins = 1,\n    account = -1,\n    password = -1; //\n  const {\n    data: {\n      message,\n      whr,\n      pos\n    }\n  } = await axios.post('/infor', {\n    account,\n    password,\n    wheretosit,\n    //\n    seatID,\n    //\n    ins\n  });\n  // console.log(whr);\n  return {\n    whr,\n    pos\n  }; // whr => person's infor if rent, pos => 1 for rent and -1 for empty;\n};\n_c2 = QryEmpty;\nconst SeatReturn = async (account, password) => {\n  const ins = 0,\n    wheretosit = -1,\n    seatID = -1; //\n  const {\n    data: {\n      message,\n      whr,\n      pos\n    }\n  } = await axios.post('/infor', {\n    account,\n    //\n    password,\n    //\n    wheretosit,\n    seatID,\n    ins\n  });\n  console.log(message);\n  return message;\n};\n_c3 = SeatReturn;\nconst SeatRent = async (account, password, wheretosit, seatID) => {\n  const ins = 0; //\n  const {\n    data: {\n      message,\n      whr,\n      pos\n    }\n  } = await axios.post('/infor', {\n    account,\n    //\n    password,\n    //\n    wheretosit,\n    //\n    seatID,\n    //\n    ins\n  });\n  return message;\n};\n_c4 = SeatRent;\nconst QryPosition = async (account, password) => {\n  const ins = 1,\n    wheretosit = -1,\n    seatID = -1; //\n  const {\n    data: {\n      message,\n      whr,\n      pos\n    }\n  } = await axios.post('/infor', {\n    account,\n    //\n    password,\n    //\n    wheretosit,\n    seatID,\n    ins\n  });\n  return {\n    message,\n    whr,\n    pos\n  };\n};\n\n// call func when rent\n_c5 = QryPosition;\nconst AcntRegister = async (account, password) => {\n  const ins = 1; //\n  const {\n    data: {\n      message,\n      valid\n    }\n  } = await axios.get('/account', {\n    params: {\n      account,\n      //\n      password,\n      //\n      ins\n    }\n  });\n  return {\n    message,\n    valid\n  };\n};\n// call func when return or search\n_c6 = AcntRegister;\nconst LogCheck = async (account, password) => {\n  const ins = 0; //\n  const {\n    data: {\n      message,\n      valid\n    }\n  } = await axios.get('/account', {\n    params: {\n      account,\n      //\n      password,\n      //\n      ins\n    }\n  });\n  console.log(message, valid);\n  return {\n    message,\n    valid\n  };\n};\n_c7 = LogCheck;\nexport { QryEmpty, SeatReturn, SeatRent, QryPosition, AcntRegister, LogCheck, GetAll };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"GetAll\");\n$RefreshReg$(_c2, \"QryEmpty\");\n$RefreshReg$(_c3, \"SeatReturn\");\n$RefreshReg$(_c4, \"SeatRent\");\n$RefreshReg$(_c5, \"QryPosition\");\n$RefreshReg$(_c6, \"AcntRegister\");\n$RefreshReg$(_c7, \"LogCheck\");","map":{"version":3,"names":["axios","GetAll","ins","account","password","wheretosit","seatID","data","message","whr","pos","post","QryEmpty","console","log","SeatReturn","SeatRent","QryPosition","AcntRegister","valid","get","params","LogCheck"],"sources":["C:/Users/kenny/Desktop/hw/wp/final_project/wp_final_project/frontend/src/util/ApiFunc.js"],"sourcesContent":["import axios from '../api';\r\n\r\n//POST\r\n\r\nconst GetAll = async () => {\r\n  const ins = 2, account = -1, password = -1, wheretosit = 0, seatID = -1; //\r\n  const {\r\n    data: { message, whr, pos },\r\n  } = await axios.post('/infor', {\r\n    account,\r\n    password,\r\n    wheretosit, //\r\n    seatID, //\r\n    ins\r\n  });\r\n  return whr; // whr => all people's infor\r\n};\r\nconst QryEmpty = async (wheretosit, seatID) => {\r\n    console.log(wheretosit, seatID);\r\n    const ins = 1, account = -1, password = -1; //\r\n    const {\r\n      data: { message, whr, pos },\r\n    } = await axios.post('/infor', {\r\n      account,\r\n      password,\r\n      wheretosit, //\r\n      seatID, //\r\n      ins\r\n    });\r\n    // console.log(whr);\r\n    return {whr, pos}; // whr => person's infor if rent, pos => 1 for rent and -1 for empty;\r\n  };\r\n\r\n  const SeatReturn = async (account, password) => {\r\n    const ins = 0, wheretosit = -1, seatID = -1; //\r\n    const {\r\n      data: { message, whr, pos },\r\n    } = await axios.post('/infor', {\r\n      account, //\r\n      password, //\r\n      wheretosit,\r\n      seatID, \r\n      ins\r\n    });\r\n    console.log(message);\r\n    return message;\r\n  };\r\n\r\n  const SeatRent = async (account, password, wheretosit, seatID) => {\r\n    const ins = 0; //\r\n    const {\r\n      data: { message, whr, pos },\r\n    } = await axios.post('/infor', {\r\n      account, //\r\n      password, //\r\n      wheretosit, //\r\n      seatID, //\r\n      ins\r\n    });\r\n\r\n    return message;\r\n  };\r\n\r\n  const QryPosition = async (account, password) => {\r\n    const ins = 1, wheretosit = -1, seatID = -1; //\r\n    const {\r\n      data: { message, whr, pos },\r\n    } = await axios.post('/infor', {\r\n      account, //\r\n      password, //\r\n      wheretosit,\r\n      seatID, \r\n      ins\r\n    });\r\n\r\n    return {message, whr, pos};\r\n  };\r\n\r\n  // call func when rent\r\nconst AcntRegister = async (account, password) => {\r\n    const ins = 1; //\r\n    const {\r\n      data: { message, valid },\r\n    } = await axios.get('/account', {\r\n      params: {\r\n        account, //\r\n        password, //\r\n        ins,\r\n      },\r\n    });\r\n\r\n    return { message, valid };\r\n  };\r\n// call func when return or search\r\n  const LogCheck = async (account, password) => {\r\n    const ins = 0; //\r\n    const {\r\n      data: { message, valid }\r\n    } = await axios.get('/account', {\r\n      params: {\r\n        account, //\r\n        password, //\r\n        ins,\r\n      }\r\n    });\r\n    console.log(message, valid);\r\n    return { message, valid };\r\n  };\r\n\r\n\r\nexport {QryEmpty, SeatReturn, SeatRent, QryPosition, AcntRegister, LogCheck, GetAll};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}